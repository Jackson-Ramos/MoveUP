generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  student Student?
  trainer Trainer?
  active  Boolean   @default(true)
}

model Student {
  id        String          @id @default(uuid())
  user      User            @relation(fields: [id], references: [id])
  trainer   Trainer         @relation(fields: [trainerId], references: [id])
  trainerId String
  workouts  Workout[]
  sessions  Session[]
  profile   StudentProfile?
}

model StudentProfile {
  id                String   @id @default(uuid())
  student           Student  @relation(fields: [id], references: [id])
  goals             String
  trainingTime      String
  trainingDays      Int
  preferredLocation String
  currentWeight     Float
  currentHeight     Float
  birthDate         DateTime
  gender            String
  experience        String
  limitations       String?
  medications       String?
  hasTrainerBefore  Boolean
  motivation        String
}

model Trainer {
  id       String    @id @default(uuid())
  bio      String
  user     User      @relation(fields: [id], references: [id])
  students Student[]
  sessions Session[]
}

model Workout {
  id          String            @id @default(uuid())
  title       String
  description String
  startDate   DateTime
  endDate     DateTime
  student     Student           @relation(fields: [studentId], references: [id])
  studentId   String
  exercises   WorkoutExercise[]
}

model WorkoutExercise {
  id          String  @id @default(uuid())
  name        String
  sets        Int
  repetitions Int
  weight      Float
  notes       String?
  mediaUrl    String
  workout     Workout @relation(fields: [workoutId], references: [id])
  workoutId   String
}

model Session {
  id        String   @id @default(uuid())
  title     String
  dateTime  DateTime
  location  String
  student   Student  @relation(fields: [studentId], references: [id])
  studentId String
  trainer   Trainer  @relation(fields: [trainerId], references: [id])
  trainerId String
}

enum Role {
  STUDENT
  TRAINER
  ADMINISTRATOR
}